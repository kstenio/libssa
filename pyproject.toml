[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "libssa"
version = "2.5.0a1"
description = "LIBSsa: an open source software for analyzing LIBS spectra"
authors = [{ name = "Kleydson Stenio", email = "9257942+kstenio@users.noreply.github.com" }]
readme = "README.md"
license = {file="LICENSE.txt"}
keywords = ['python', 'libs', 'spectroscopy']
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8,<3.12"
dependencies = [
    "numpy>=1.24.0,<2.5.0",
    "scipy>=1.10.0,<1.15.0",
    "pandas>=2.0.3,<2.3.0",
    "scikit-learn>=1.3.0,<1.6.0",
    "PySide6>=6.4.3,<6.8.0",
    "pyqtgraph>=0.13.3,<0.14.0",
    "openpyxl>=3.1.2,<3.2.0",
    "psutil>=5.9.5,<6.1.0",
    "Markdown>=3.4.3,<3.8.0"
]

[project.scripts]
libssa-gui = "libssa.libssa2:spawn_gui"

[project.urls]
Homepage = "https://kstenio.github.io/libssa/"
Repository = "https://github.com/kstenio/libssa"
Documentation = "https://kstenio.github.io/libssa/"

#[tool.mypy]
#files = ["libssa"]
#disallow_untyped_defs = "True"
#disallow_any_unimported = "True"
#no_implicit_optional = "True"
#check_untyped_defs = "True"
#warn_return_any = "True"
#warn_unused_ignores = "True"
#show_error_codes = "True"

[tool.pytest.ini_options]
testpaths = ["tests"]

#[tool.ruff]
#target-version = "py311"
#line-length = 120
#fix = true
#select = [
#    "YTT",      # flake8-2020
#    "S",        # flake8-bandit
#    "B",        # flake8-bugbear
#    "A",        # flake8-builtins
#    "C4",       # flake8-comprehensions
#    "T10",      # flake8-debugger
#    "SIM",      # flake8-simplify
#    "I",        # isort
#    "C90",      # mccabe
#    "E", "W",   # pycodestyle
#    "F",        # pyflakes
#    "PGH",      # pygrep-hooks
#    "UP",       # pyupgrade
#    "RUF",      # ruff
#    "TRY",      # tryceratops
#]
#ignore = [
#    "E501",     # LineTooLong
#    "E731",     # DoNotAssignLambda
#]

#[tool.ruff.format]
#preview = true
#
#[tool.ruff.per-file-ignores]
#"tests/*" = ["S101"]

[tool.uv]
compile-bytecode = true
resolution = "highest"
dev-dependencies = [
    "pytest>=7.2.0,<8.4.0",
    "pytest-qt>=4.4.0,<4.5.0",
    "pre-commit>=2.20.0,<3.9.0",
#    "deptry>=0.20.0",
#    "mypy>=0.991",
#    "ruff>=0.0.235",
]
